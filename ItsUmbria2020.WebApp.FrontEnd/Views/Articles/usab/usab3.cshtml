<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="it" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">
<head>
<title>Programmiamo</title>
<meta name="keywords" content="programmiamo, programmi, linguaggi, javascript, visual basic"/>
<meta name="description" content="linguaggi di programmazione"/>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
<link href=" ../css/principale.css" rel="stylesheet" type="text/css"/>
<link href=" ../css/classi.css" rel="stylesheet" type="text/css"/>
<style type="text/css">
.style1 {
				text-align: center;
}
</style>
</head>
<body>
  <div id="contenitore2">
    <!-- Contneuti -->
	 <div class="titolo">Meccanismi visibili e nascosti</div>
	 <p>Quando il funzionamento dell'oggetto � <em>visibile</em> all'utente (come nel 
		caso di uno schiaccianoci o delle forbici) in genere l'utente riesce 
		abbastanza facilmente a costruirsi un modello mentale corretto del 
		funzionamento dell'oggetto. Quando invece il meccanismo di funzionamento 
		� nascosto (come accade nella maggior parte dei dispositivi elettrici ed 
		elettronici, nel software e nel codice html delle pagine web) l'utente 
		deve cercare di indovinare il modello nascosto in base ai suggerimenti 
		forniti dal progettista.</p>
	<p>Si confronti per esempio un frullatore manuale con un frullatore 
	elettrico:</p>
	<p class="style1">
	<img alt="Frullatore manuale ed elettrico" src="../img/img24.jpg" /></p>
	<p>Nel caso del frullatore manuale tutti i meccanismi sono immediatamente 
	visibili dall'utente e quindi questi � ragionevolmente in grado di crearsi 
	un modello mentale corretto del funzionamento dell'oggetto. Nel frullatore 
	elettrico invece il funzionamento � nascosto. In particolare � nascosto il 
	collegamento fra i comandi dell'oggetto (i pulsanti e i tasti) e le azioni 
	effettuate dall'oggetto in risposta ai comandi. Dunque in questo caso dev'essere 
	il progettista a suggerire in modo efficace all'utente come l'oggetto stesso 
	debba essere usato.</p>
	 <div class="titolo">I comandi e la correlazione con le azioni</div>
	<p>In generale se il sistema presenta un comando (per esempio un pulsante) 
	diverso per ogni diversa funzione e se i comandi stessi sono visivamente 
	correlati alla funzione stessa (per esempio perch� disposti in vicinanza o 
	perch� hanno una forma che ne suggerisce l'uso), l'utente � in grado di 
	imparare abbastanza facilmente lo scopo di ogni singolo comando. Per esempio 
	il comando di un sedile reclinabile in un'auto � un esempio di progetto 
	usabile: il comando ha una forma che ne suggerisce l'uso e inoltre si trova 
	vicino all'oggetto da controllare (il sedile).</p>
	<p class="style1">
	<img src="../img/left-right-seat-lever-seater-reclining-handle-adjusting-switches-side-recliner-for-ford-for-focus-mk2.jpg_200x200.jpg" /></p>
	<p>Viceversa se uno stesso comando svolge pi� funzioni e/o se non � 
	efficacemente correlato alle funzioni svolte, l'utente pu� avere difficolt� 
	a comprendere e a impararne l'uso. Si consideri per esempio la seguente 
	disposizione di fornelli e di manopole per la regolazione del gas: non 
	esiste nessuna correlazione evidente tra la posizione della manopola e 
	quella del fornello controllato e dunque l'usabilit� � scarsa (l'utente deve 
	imparare a memoria la posizione oppure disegnarsi uno schema, come mostrato 
	in figura).</p>
	<p class="style1">
	<img alt="usabilit� e disposizione fornelli cucina" src="../img/imgC.jpg" /></p>
	<p>Si consideri adesso invece la disposizione mostrata nella figura 
	seguente. Essa � certamente pi� usabile, in quanto la posizione della 
	manopola � correlata visivamente con la posizione del fornello controllato:</p>
	<p class="style1">
	<img src="../img/3322062060_456ff5dc27_m.jpg" alt="Natural Mapping (tamlyn.org) Tags: usability cooker mapping hob naturalmapping" /></p>
	<p>Anche il numero di diversi comandi 
	disponibili influisce sull'usabilit� di un oggetto, come mostra la figura 
	seguente, dove sono confrontati i pannelli di controllo di due diversi forni 
	a microonde:</p>
	<p>
	<img alt="Usabilit� e pannello di controllo" src="../img/img7.jpg" /></p>
	<p>In generale pi� un dispositivo � complesso e maggiore � il numero delle 
	sue possibili funzioni (e dunque dei suoi comandi) pi� complesso diventa il 
	problema di un progetto usabile. Spesso si ha il paradosso di dispositivi 
	che hanno moltissime funzioni e di utenti che ne usano solo una minima 
	parte, perch� nessuno conosce le altre!</p>
	<p>&nbsp;</p>
	 <div class="titolo">Il feedback per l'utente</div>
	 <p>Un'altra caratteristica molto importante per l'usabilit� di un oggetto � 
		il <strong>feedback per l'utente</strong>. Il feedback consiste 
		nell'informare l'utente (attraverso un segnale di ritorno) dell'effetto 
		di un certo comando e del successo (o insuccesso) dell'operazione 
		effettuata.</p>
	<p>Facciamo un esempio. Quando accendo un fornello a gas, mi accorgo del 
	risultato perch� vedo (oppure non vedo) la fiamma. Usando una piastra a 
	induzione, riscaldata tramite induzione elettromagnetica, non ho nessun 
	segnale di conferma (feedback) dell'avvenuta accensione. In questo caso � il 
	progettista a dover provvedere il feedback, tramite spie luminose, display o 
	altro.</p>
	<p class="style1"><img src="../img/HD4909.jpeg" /></p>
	<p>Problemi di feedback si hanno anche nel software e nelle pagine web 
	L'informazione di risposta diventa particolarmente importante quando il 
	sistema impiega molto tempo per portare a compimento l'esecuzione di un 
	comando. In questi casi, infatti, l'utente deve sapere che il sistema non ha 
	ignorato la sua istruzione, ma sta lavorando per eseguirla. Un buon metodo 
	per trasmettere questa informazione consiste in un feedback continuo, se 
	possibile nella forma di un indicatore che mostri la percentuale del lavoro 
	gi� svolto. </p>
	<p class="style1"><img src="../img/backupRestoreDatabase.jpg" /></p>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
</div>
    <!-- Fine Contenuti -->
</body>
</html>



